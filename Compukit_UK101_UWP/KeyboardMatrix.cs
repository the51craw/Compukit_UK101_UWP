namespace Compukit_UK101_UWP
{
	public class KeyboardMatrix
	{
        public byte[][] Bytes = new byte[][] {
            new byte[] { 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x00 }, // 1 2 3 4 5 6 7    Emty positions contains no switches
            new byte[] { 0x38, 0x39, 0x30, 0xbb, 0xdb, 0x08, 0x00, 0x00 }, // 8 9 0 : - <      < = rub out
            new byte[] { 0xbe, 0x4c, 0x4f, 0xba, 0x0d, 0x00, 0x00, 0x00 }, // . L O ^ <        ^ = up arrow < = cr/enter
            new byte[] { 0x57, 0x45, 0x52, 0x54, 0x59, 0x55, 0x49, 0x00 }, // W E R T Y U I
            new byte[] { 0x53, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x00 }, // S D F G H J K
            new byte[] { 0x58, 0x43, 0x56, 0x42, 0x4e, 0x4d, 0xbc, 0x00 }, // X C V B N M ,
            new byte[] { 0x51, 0x41, 0x5a, 0x20, 0xbd, 0xc0, 0x50, 0x00 }, // Q A Z * / ; P    * = Space
            new byte[] { 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x10, 0x14 }, //   *       * * *  * = Ctrl, L-shift, R-shift, Caps lock
        };
        //public byte[][] Bytes = new byte[][] {
        //    new byte[] { 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x00 }, // 1 2 3 4 5 6 7    Emty positions contains no switches
        //    new byte[] { 0x38, 0x39, 0x30, 0xbb, 0xdb, 0x08, 0x00, 0x00 }, // 8 9 0 : - <      < = rub out
        //    new byte[] { 0xbe, 0x4c, 0x4f, 0xba, 0x0d, 0x00, 0x00, 0x00 }, // . L O ^ <        ^ = up arrow < = cr/enter
        //    new byte[] { 0x57, 0x45, 0x52, 0x54, 0x59, 0x55, 0x49, 0x00 }, // W E R T Y U I
        //    new byte[] { 0x53, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x00 }, // S D F G H J K
        //    new byte[] { 0x58, 0x43, 0x56, 0x42, 0x4e, 0x32, 0xbc, 0x00 }, // X C V B N M ,
        //    new byte[] { 0x51, 0x41, 0x5a, 0x20, 0xbd, 0xc0, 0x50, 0x00 }, // Q A Z * / ; P    * = Space
        //    new byte[] { 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x10, 0x14 }, //   *       * * *  * = Ctrl, L-shift, R-shift, Caps lock
        //};
        //public byte[][] Bytes = new byte[][] {
        //    new byte[] { 0x00, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x00 }, // 1 2 3 4 5 6 7    Emty positions contains no switches
        //    new byte[] { 0x00, 0x38, 0x39, 0x30, 0xbb, 0xdb, 0x08, 0x00, 0x00 }, // 8 9 0 : - <      < = rub out
        //    new byte[] { 0x00, 0xbe, 0x4c, 0x4f, 0xba, 0x0d, 0x00, 0x00, 0x00 }, // . L O ^ <        ^ = up arrow < = cr/enter
        //    new byte[] { 0x00, 0x57, 0x45, 0x52, 0x54, 0x59, 0x55, 0x49, 0x00 }, // W E R T Y U I
        //    new byte[] { 0x00, 0x53, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x00 }, // S D F G H J K
        //    new byte[] { 0x00, 0x58, 0x43, 0x56, 0x42, 0x4e, 0x4d, 0xbc, 0x00 }, // X C V B N M ,
        //    new byte[] { 0x00, 0x51, 0x41, 0x5a, 0x20, 0xbd, 0xc0, 0x50, 0x00 }, // Q A Z * / ; P    * = Space
        //    new byte[] { 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x10, 0x14 }, //   *       * * *  * = Ctrl, L-shift, R-shift, Caps lock
        //};
        //public byte[][] Bytes = new byte[][] {
        //    new byte[] { 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x10, 0x14 }, //   *       * * *  * = Ctrl, L-shift, R-shift, Caps lock
        //    new byte[] { 0x51, 0x41, 0x5a, 0x20, 0xbd, 0xc0, 0x50, 0x00 }, // Q A Z * / ; P    * = Space
        //    new byte[] { 0x58, 0x43, 0x56, 0x42, 0x4e, 0x4d, 0xbc, 0x00 }, // X C V B N M ,
        //    new byte[] { 0x53, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x00 }, // S D F G H J K
        //    new byte[] { 0x57, 0x45, 0x52, 0x54, 0x59, 0x55, 0x49, 0x00 }, // W E R T Y U I
        //    new byte[] { 0xbe, 0x4c, 0x4f, 0xba, 0x0d, 0x00, 0x00, 0x00 }, // . L O ^ <        ^ = up arrow < = cr/enter
        //    new byte[] { 0x38, 0x39, 0x30, 0xbb, 0xdb, 0x08, 0x00, 0x00 }, // 8 9 0 : - <      < = rub out
        //    new byte[] { 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x00 }, // 1 2 3 4 5 6 7    Emty positions contains no switches
        //};
        //public byte[][] Bytes = new byte[][] {
        //    new byte[] { 0x14, 0x10, 0x12, 0x00, 0x00, 0x00, 0x11, 0x00 }, //   *       * * *  * = Ctrl, L-shift, R-shift, Caps lock
        //    new byte[] { 0x00, 0x50, 0xc0, 0xbd, 0x20, 0x5a, 0x41, 0x51 }, // Q A Z * / ; P    * = Space
        //    new byte[] { 0x00, 0xbc, 0x4d, 0x4e, 0x42, 0x56, 0x43, 0x58 }, // X C V B N M ,
        //    new byte[] { 0x00, 0x4b, 0x4a, 0x48, 0x47, 0x46, 0x44, 0x53 }, // S D F G H J K
        //    new byte[] { 0x00, 0x49, 0x55, 0x59, 0x54, 0x52, 0x45, 0x57 }, // W E R T Y U I
        //    new byte[] { 0x00, 0x00, 0x00, 0x0d, 0xba, 0x4f, 0x4c, 0xbe }, // . L O ^ <        ^ = up arrow < = cr/enter
        //    new byte[] { 0x00, 0x00, 0x08, 0xdb, 0xbb, 0x30, 0x39, 0x38 }, // 8 9 0 : - <      < = rub out
        //    new byte[] { 0x00, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31 }, // 1 2 3 4 5 6 7    Emty positions contains no switches
        //};
    }
}
/* FF3c - ff6c in MONITOR contains its internal map:
0x50, 0x3b, 0x2f, 0x20, 0x5a, 0x41, 0x51,
0x2c, 0x4d, 0x4e, 0x42, 0x56, 0x43, 0x58, 
0x4b, 0x4a, 0x48, 0x47, 0x46, 0x44, 0x53, 
0x49, 0x55, 0x59, 0x54, 0x52, 0x45, 0x57,
0x00, 0x00, 0x0d, 0x0a, 0x4f, 0x4c, 0x2e,
0x00, 0x5f, 0x2d, 0x3a, 0x30, 0x39, 0x38,
0x37, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31,
*/
